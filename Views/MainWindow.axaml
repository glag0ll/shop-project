<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:AvaloniaApplication3.ViewModels"
        xmlns:models="using:AvaloniaApplication3.Models"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:conv="using:AvaloniaApplication3.Converters"
        xmlns:sys="using:System"
        xmlns:i="using:Avalonia.Xaml.Interactivity"
        xmlns:ia="using:Avalonia.Xaml.Interactions.Core"
        mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="600"
        x:Class="AvaloniaApplication3.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/shopping-cart.ico"
        Title="Управление товарами"
        WindowStartupLocation="CenterScreen"
        Background="{DynamicResource BaseColor}">

    <Window.Resources>
        <conv:IsPositiveConverter x:Key="IsPositiveConverter"/>
        <conv:EnumToStringConverter x:Key="EnumToStringConverter"/>
        <conv:EnumEqualityConverter x:Key="EnumEqualityConverter"/>
        <conv:MessageTypeVisibilityConverter x:Key="MessageTypeVisibilityConverter"/>
        <conv:MessageTypeToColorConverter x:Key="MessageTypeToColorConverter"/>
        <conv:DoubleValidationConverter x:Key="DoubleValidationConverter"/>
        <conv:EmailValidationConverter x:Key="EmailValidationConverter"/>
        <conv:PhoneValidationConverter x:Key="PhoneValidationConverter"/>
    </Window.Resources>

    <Window.Styles>
        <!-- Стили для кнопок при наведении -->
        <Style Selector="Button:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="#80000000"/>
            <Setter Property="Opacity" Value="0.8"/>
        </Style>
        
        <!-- Специальные стили для различных типов кнопок при наведении -->
        <Style Selector="Button[Background=Green]:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="DarkGreen"/>
        </Style>
        
        <Style Selector="Button[Background=Red]:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="DarkRed"/>
        </Style>
        
        <Style Selector="Button[Background=DodgerBlue]:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="RoyalBlue"/>
        </Style>
        
        <Style Selector="Button[Background=Gray]:pointerover /template/ ContentPresenter">
            <Setter Property="Background" Value="DimGray"/>
        </Style>
        
        <!-- Стили для заголовков полей ввода -->
        <Style Selector="TextBlock.field-header">
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Margin" Value="0,0,0,5"/>
            <Setter Property="Background" Value="{DynamicResource Surface2Color}"/>
            <Setter Property="Padding" Value="5"/>
        </Style>
        
        <!-- Стили для полей с ошибками валидации -->
        <Style Selector="TextBox:error">
            <Setter Property="BorderBrush" Value="{DynamicResource RedColor}"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
        
        <Style Selector="NumericUpDown:error">
            <Setter Property="BorderBrush" Value="{DynamicResource RedColor}"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
        
        <Style Selector="ComboBox:error">
            <Setter Property="BorderBrush" Value="{DynamicResource RedColor}"/>
            <Setter Property="BorderThickness" Value="2"/>
        </Style>
        
        <!-- Стиль для текста ошибки -->
        <Style Selector="TextBlock.error-text">
            <Setter Property="Foreground" Value="{DynamicResource RedColor}"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="0,2,0,5"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
    </Window.Styles>

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Grid RowDefinitions="Auto,*,Auto" ColumnDefinitions="*,Auto">
        <!-- Header with Title and Basket Button -->
        <Grid Grid.Row="0" ColumnDefinitions="Auto,*,Auto">
            <TextBlock Grid.Column="0" Text="Товары" FontSize="24" FontWeight="Bold" Margin="0,0,0,10" Foreground="{DynamicResource TextBrush}"/>
            
            <Button Grid.Column="2" 
                    Command="{Binding OpenBasketWindowCommand}" 
                    IsEnabled="{Binding BasketList.Items.Count, Converter={StaticResource IsPositiveConverter}}"
                    Margin="0,0,0,10"
                    Padding="10,5"
                    Background="{DynamicResource BlueColor}"
                    Foreground="{DynamicResource BaseColor}">
                <StackPanel Orientation="Horizontal">
                    <PathIcon Data="M7,18C5.9,18 5.01,18.9 5.01,20C5.01,21.1 5.9,22 7,22C8.1,22 9,21.1 9,20C9,18.9 8.1,18 7,18M1,2V4H3L6.6,11.59L5.25,14.04C5.09,14.32 5,14.65 5,15C5,16.1 5.9,17 7,17H19V15H7.42C7.28,15 7.17,14.89 7.17,14.75L7.2,14.63L8.1,13H15.55C16.3,13 16.96,12.59 17.3,11.97L20.88,5.5C20.96,5.34 21,5.17 21,5C21,4.45 20.55,4 20,4H5.21L4.27,2M17,18C15.9,18 15.01,18.9 15.01,20C15.01,21.1 15.9,22 17,22C18.1,22 19,21.1 19,20C19,18.9 18.1,18 17,18Z" 
                              Width="24" Height="24" Margin="0,0,5,0"/>
                    <TextBlock Text="{Binding BasketList.Items.Count, StringFormat=Корзина ({0})}" VerticalAlignment="Center"/>
                </StackPanel>
            </Button>
        </Grid>
        
        <!-- Products Panel -->
        <Grid Grid.Row="1" RowDefinitions="*,Auto">
            <DataGrid Grid.Row="0" 
                      ItemsSource="{Binding ProductList.Products}" 
                      AutoGenerateColumns="False"
                      SelectedItem="{Binding SelectedProduct}"
                      IsReadOnly="True"
                      Background="{DynamicResource Surface0Color}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Название" Binding="{Binding Name}" Width="*" Foreground="{DynamicResource TextBrush}"/>
                    <DataGridTextColumn Header="Цена" Binding="{Binding Price, StringFormat=\{0:C\}}" Width="Auto" Foreground="{DynamicResource TextBrush}"/>
                    <DataGridTextColumn Header="Количество" Binding="{Binding Quantity}" Width="Auto" Foreground="{DynamicResource TextBrush}"/>
                    <DataGridTemplateColumn Header="Действия" Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate x:DataType="models:Product">
                                <StackPanel Orientation="Horizontal">
                                    <Button Content="Добавить в корзину" 
                                            Command="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).AddToBasketCommand}" 
                                            CommandParameter="{Binding}"
                                            Margin="2"
                                            Background="{DynamicResource GreenColor}"
                                            Foreground="{DynamicResource BaseColor}"
                                            IsEnabled="{Binding Quantity, Converter={StaticResource IsPositiveConverter}}"
                                            ToolTip.Tip="Добавить товар в корзину"/>
                                    <Button Content="Изменить" 
                                            Command="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).ShowProductEditDialogCommand}" 
                                            CommandParameter="{Binding}"
                                            Margin="2"
                                            Background="{DynamicResource BlueColor}"
                                            Foreground="{DynamicResource BaseColor}"
                                            ToolTip.Tip="Редактировать товар"/>
                                    <Button Content="Удалить" 
                                            Command="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).DeleteProductCommand}" 
                                            CommandParameter="{Binding}"
                                            Margin="2"
                                            Background="{DynamicResource RedColor}"
                                            Foreground="{DynamicResource BaseColor}"
                                            ToolTip.Tip="Удалить товар"/>
                                </StackPanel>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
            <Button Grid.Row="1" 
                    Content="Добавить новый товар" 
                    HorizontalAlignment="Right" 
                    Margin="0,10,0,0"
                    Background="{DynamicResource GreenColor}"
                    Foreground="{DynamicResource BaseColor}"
                    Padding="10,5"
                    Command="{Binding ShowProductAddDialogCommand}"/>
        </Grid>
        
        <!-- Product Edit Dialog -->
        <Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                Background="#80000000"
                IsVisible="{Binding ShowEditDialog}">
            <Border Background="{DynamicResource BaseColor}"
                    Width="500"
                    Height="450"
                    CornerRadius="5"
                    BoxShadow="0 4 8 0 #40000000">
                <Grid RowDefinitions="Auto,*,Auto" Margin="20">
                    <TextBlock Grid.Row="0" Text="Редактирование товара" FontSize="24" FontWeight="Bold" Margin="0,0,0,20" Foreground="{DynamicResource TextBrush}"/>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                        <StackPanel Spacing="10">
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Название товара *" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите название товара (обязательное поле)" Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <TextBox Text="{Binding EditingProduct.Name}" Watermark="Например: Ноутбук Acer Aspire 5"/>
                            </StackPanel>
                            
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Описание товара" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите детальное описание товара" Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <TextBox Text="{Binding EditingProduct.Description}" Height="80" 
                                         AcceptsReturn="True" TextWrapping="Wrap"
                                         Watermark="Например: Мощный ноутбук с процессором Intel Core i5, 8GB RAM и SSD 512GB"/>
                            </StackPanel>
                            
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Цена товара *" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите цену товара в рублях (обязательное поле, больше нуля)" 
                                          Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <NumericUpDown Value="{Binding EditingProduct.Price}" FormatString="C" 
                                              Minimum="0.01" Increment="10" 
                                              Watermark="Например: 49999.99"
                                              ClipValueToMinMax="True"/>
                            </StackPanel>
                            
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Количество на складе *" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите доступное количество товара (не меньше 0)" 
                                          Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <NumericUpDown Value="{Binding EditingProduct.Quantity}" 
                                              Minimum="0" Increment="1"
                                              Watermark="Например: 10"
                                              ClipValueToMinMax="True"/>
                            </StackPanel>
                            
                            <TextBlock Text="* - поля, обязательные для заполнения" Margin="0,10,0,0" 
                                     Opacity="0.7" FontStyle="Italic" Foreground="{DynamicResource Subtext1Color}"/>
                        </StackPanel>
                    </ScrollViewer>
                    
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                        <Button Content="Отмена" Command="{Binding CloseEditDialogCommand}" Margin="0,0,10,0" 
                                Background="{DynamicResource Surface1Color}" Foreground="{DynamicResource TextColor}" Padding="20,8"/>
                        <Button Content="Сохранить" Command="{Binding SaveProductCommand}" 
                                Background="{DynamicResource GreenColor}" Foreground="{DynamicResource BaseColor}" Padding="20,8"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Border>
        
        <!-- Product Add Dialog -->
        <Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                Background="#80000000"
                IsVisible="{Binding ShowAddDialog}">
            <Border Background="{DynamicResource BaseColor}"
                    Width="500"
                    Height="450"
                    CornerRadius="5"
                    BoxShadow="0 4 8 0 #40000000">
                <Grid RowDefinitions="Auto,*,Auto" Margin="20">
                    <TextBlock Grid.Row="0" Text="Добавление нового товара" FontSize="24" FontWeight="Bold" Margin="0,0,0,20" Foreground="{DynamicResource TextBrush}"/>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                        <StackPanel Spacing="10">
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Название товара *" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите название товара (обязательное поле)" Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <TextBox Text="{Binding EditingProduct.Name}" Watermark="Например: Ноутбук Acer Aspire 5"/>
                            </StackPanel>
                            
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Описание товара" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите детальное описание товара" Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <TextBox Text="{Binding EditingProduct.Description}" Height="80" 
                                         AcceptsReturn="True" TextWrapping="Wrap"
                                         Watermark="Например: Мощный ноутбук с процессором Intel Core i5, 8GB RAM и SSD 512GB"/>
                            </StackPanel>
                            
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Цена товара *" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите цену товара в рублях (обязательное поле, больше нуля)" 
                                          Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <NumericUpDown Value="{Binding EditingProduct.Price}" FormatString="C" 
                                              Minimum="0.01" Increment="10" 
                                              Watermark="Например: 49999.99"
                                              ClipValueToMinMax="True"/>
                            </StackPanel>
                            
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Количество на складе *" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите доступное количество товара (не меньше 0)" 
                                          Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <NumericUpDown Value="{Binding EditingProduct.Quantity}" 
                                              Minimum="0" Increment="1"
                                              Watermark="Например: 10"
                                              ClipValueToMinMax="True"/>
                            </StackPanel>
                            
                            <TextBlock Text="* - поля, обязательные для заполнения" Margin="0,10,0,0" 
                                     Opacity="0.7" FontStyle="Italic" Foreground="{DynamicResource Subtext1Color}"/>
                        </StackPanel>
                    </ScrollViewer>
                    
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                        <Button Content="Отмена" Command="{Binding CloseEditDialogCommand}" Margin="0,0,10,0" 
                                Background="{DynamicResource Surface1Color}" Foreground="{DynamicResource TextColor}" Padding="20,8"/>
                        <Button Content="Добавить" Command="{Binding SaveProductCommand}" 
                                Background="{DynamicResource GreenColor}" Foreground="{DynamicResource BaseColor}" Padding="20,8"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Border>
        
        <!-- Checkout Dialog -->
        <Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                Background="#80000000"
                IsVisible="{Binding ShowCheckoutDialog}">
            <Border Background="{DynamicResource BaseColor}"
                    Width="600"
                    Height="500"
                    CornerRadius="5"
                    BoxShadow="0 4 8 0 #40000000">
                <Grid RowDefinitions="Auto,*,Auto" Margin="20">
                    <TextBlock Grid.Row="0" Text="Оформление заказа" FontSize="24" FontWeight="Bold" Margin="0,0,0,20" Foreground="{DynamicResource TextBrush}"/>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                        <StackPanel Spacing="10">
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="ФИО получателя *" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите полные ФИО получателя заказа" Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <TextBox Name="NameTextBox" Text="{Binding CurrentOrder.CustomerName}" 
                                         Watermark="Например: Иванов Иван Иванович">
                                    <i:Interaction.Behaviors>
                                        <ia:EventTriggerBehavior EventName="LostFocus">
                                            <ia:InvokeCommandAction Command="{Binding ValidateNameCommand}"/>
                                        </ia:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <TextBlock Text="{Binding NameError}" 
                                           Classes="error-text" 
                                           IsVisible="{Binding NameError, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" Foreground="{DynamicResource RedColor}"/>
                            </StackPanel>
                            
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Электронная почта" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите e-mail для связи (должен содержать символ @)" Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <TextBox Name="EmailTextBox" Text="{Binding CurrentOrder.CustomerEmail}" 
                                         Watermark="Например: example@mail.ru">
                                    <i:Interaction.Behaviors>
                                        <ia:EventTriggerBehavior EventName="LostFocus">
                                            <ia:InvokeCommandAction Command="{Binding ValidateEmailCommand}"/>
                                        </ia:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <TextBlock Text="{Binding EmailError}" 
                                           Classes="error-text" 
                                           IsVisible="{Binding EmailError, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" Foreground="{DynamicResource RedColor}"/>
                            </StackPanel>
                            
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Телефон *" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите контактный телефон для связи (должен начинаться с + и содержать 11 цифр)" Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <TextBox Name="PhoneTextBox" Text="{Binding CurrentOrder.CustomerPhone}" 
                                         Watermark="Например: +7 (123) 456-78-90">
                                    <i:Interaction.Behaviors>
                                        <ia:EventTriggerBehavior EventName="LostFocus">
                                            <ia:InvokeCommandAction Command="{Binding ValidatePhoneCommand}"/>
                                        </ia:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <TextBlock Text="{Binding PhoneError}" 
                                           Classes="error-text" 
                                           IsVisible="{Binding PhoneError, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" Foreground="{DynamicResource RedColor}"/>
                            </StackPanel>
                            
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Адрес доставки *" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Введите полный адрес доставки" Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <TextBox Name="AddressTextBox" Text="{Binding CurrentOrder.DeliveryAddress}" Height="60" 
                                         AcceptsReturn="True" TextWrapping="Wrap"
                                         Watermark="Например: г. Москва, ул. Ленина, д. 1, кв. 123">
                                    <i:Interaction.Behaviors>
                                        <ia:EventTriggerBehavior EventName="LostFocus">
                                            <ia:InvokeCommandAction Command="{Binding ValidateAddressCommand}"/>
                                        </ia:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </TextBox>
                                <TextBlock Text="{Binding AddressError}" 
                                           Classes="error-text" 
                                           IsVisible="{Binding AddressError, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" Foreground="{DynamicResource RedColor}"/>
                            </StackPanel>
                            
                            <StackPanel>
                                <Border Background="{DynamicResource Surface1Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Margin="0,0,0,5">
                                    <TextBlock Text="Способ оплаты *" Classes="field-header"/>
                                </Border>
                                <TextBlock Text="Выберите предпочтительный способ оплаты" Opacity="0.7" FontSize="12" Margin="0,2,0,5" Foreground="{DynamicResource Subtext1Color}"/>
                                <ComboBox Name="PaymentMethodComboBox" ItemsSource="{Binding PaymentMethods}" 
                                          SelectedItem="{Binding SelectedPaymentMethod}"
                                          HorizontalAlignment="Stretch">
                                    <i:Interaction.Behaviors>
                                        <ia:EventTriggerBehavior EventName="SelectionChanged">
                                            <ia:InvokeCommandAction Command="{Binding ValidatePaymentMethodCommand}"/>
                                        </ia:EventTriggerBehavior>
                                    </i:Interaction.Behaviors>
                                </ComboBox>
                                <TextBlock Text="{Binding PaymentError}" 
                                           Classes="error-text" 
                                           IsVisible="{Binding PaymentError, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" Foreground="{DynamicResource RedColor}"/>
                            </StackPanel>
                            
                            <Border Background="{DynamicResource Surface0Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Padding="10" Margin="0,10,0,0">
                                <StackPanel>
                                    <TextBlock Text="Товары в заказе:" FontWeight="Bold" Margin="0,0,0,5" Foreground="{DynamicResource TextBrush}"/>
                                    <ItemsControl ItemsSource="{Binding BasketList.Items}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid ColumnDefinitions="*,Auto,Auto" Margin="0,2">
                                                    <TextBlock Grid.Column="0" Text="{Binding Product.Name}" Foreground="{DynamicResource TextBrush}"/>
                                                    <TextBlock Grid.Column="1" Text="{Binding Quantity, StringFormat='{}{0} шт.'}" Margin="5,0" Foreground="{DynamicResource TextBrush}"/>
                                                    <TextBlock Grid.Column="2" Text="{Binding TotalPrice, StringFormat={}{0:C}}" Foreground="{DynamicResource TextBrush}"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,10,0,0">
                                        <TextBlock Text="Итого к оплате: " FontWeight="Bold" Foreground="{DynamicResource TextBrush}"/>
                                        <TextBlock Text="{Binding BasketList.TotalCost, StringFormat={}{0:C}}" FontWeight="Bold" Foreground="{DynamicResource TextBrush}"/>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                            
                            <TextBlock Text="* - поля, обязательные для заполнения" Margin="0,10,0,0" 
                                     Opacity="0.7" FontStyle="Italic" Foreground="{DynamicResource Subtext1Color}"/>
                        </StackPanel>
                    </ScrollViewer>
                    
                    <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,20,0,0">
                        <Button Content="Отмена" Command="{Binding CloseCheckoutDialogCommand}" Margin="0,0,10,0" 
                                Background="{DynamicResource Surface1Color}" Foreground="{DynamicResource TextColor}" Padding="20,8"/>
                        <Button Content="Оформить заказ" Command="{Binding CompleteOrderCommand}" 
                                Background="{DynamicResource GreenColor}" Foreground="{DynamicResource BaseColor}" Padding="20,8"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Border>

        <!-- Order Completed Dialog -->
        <Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                Background="#80000000"
                IsVisible="{Binding ShowOrderCompletedDialog}">
            <Border Background="{DynamicResource BaseColor}"
                    Width="500"
                    Height="350"
                    CornerRadius="5"
                    BoxShadow="0 4 8 0 #40000000">
                <Grid RowDefinitions="Auto,*,Auto" Margin="20">
                    <StackPanel Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,20">
                        <Viewbox Width="64" Height="64" Margin="0,0,0,15">
                            <Path Data="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z" 
                                  Stretch="Uniform"
                                  Fill="{DynamicResource GreenColor}"/>
                        </Viewbox>
                        <TextBlock Text="Заказ успешно оформлен!" 
                                   HorizontalAlignment="Center" 
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Foreground="{DynamicResource GreenColor}"/>
                    </StackPanel>
                    
                    <StackPanel Grid.Row="1" Spacing="10">
                        <Border Background="{DynamicResource Surface0Color}" BorderBrush="{DynamicResource Surface2Color}" BorderThickness="1" Padding="15" Margin="0,0,0,10">
                            <StackPanel Spacing="8">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Номер заказа: " FontWeight="Bold" Foreground="{DynamicResource TextBrush}"/>
                                    <TextBlock Text="{Binding CurrentOrder.OrderNumber}" Foreground="{DynamicResource TextBrush}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Дата заказа: " FontWeight="Bold" Foreground="{DynamicResource TextBrush}"/>
                                    <TextBlock Text="{Binding CurrentOrder.OrderDate, StringFormat='{}{0:dd.MM.yyyy HH:mm}'}" Foreground="{DynamicResource TextBrush}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Сумма заказа: " FontWeight="Bold" Foreground="{DynamicResource TextBrush}"/>
                                    <TextBlock Text="{Binding CurrentOrder.TotalAmount, StringFormat={}{0:C}}" Foreground="{DynamicResource TextBrush}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Способ оплаты: " FontWeight="Bold" Foreground="{DynamicResource TextBrush}"/>
                                    <TextBlock Text="{Binding CurrentOrder.PaymentMethod}" Foreground="{DynamicResource TextBrush}"/>
                                </StackPanel>
                            </StackPanel>
                        </Border>
                        <TextBlock Text="Спасибо за ваш заказ! Детали заказа отправлены на указанную электронную почту." 
                                   TextWrapping="Wrap" 
                                   HorizontalAlignment="Center" 
                                   TextAlignment="Center"
                                   Foreground="{DynamicResource TextBrush}"/>
                    </StackPanel>
                    
                    <Button Grid.Row="2" 
                            Content="Готово" 
                            HorizontalAlignment="Center" 
                            Command="{Binding CloseOrderCompletedDialogCommand}"
                            Margin="0,10,0,0"
                            Background="{DynamicResource BlueColor}"
                            Foreground="{DynamicResource BaseColor}"
                            Padding="30,8"
                            FontSize="16"/>
                </Grid>
            </Border>
        </Border>
        
        <!-- Message Dialog -->
        <Border Grid.Row="0" Grid.RowSpan="2" Grid.Column="0"
                Background="#80000000"
                IsVisible="{Binding ShowMessage}">
            <Border Background="{DynamicResource BaseColor}"
                    Width="400"
                    Height="250"
                    CornerRadius="5"
                    BoxShadow="0 4 8 0 #40000000">
                <Grid Classes="message-container" RowDefinitions="Auto,*,Auto" Margin="20">
                    <StackPanel Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Center" Margin="0,0,0,10">
                        <!-- Icon -->
                        <Viewbox Width="48" Height="48" Margin="0,0,0,10">
                            <Grid>
                                <!-- Success Icon -->
                                <Path IsVisible="{Binding CurrentMessage.Type, Converter={StaticResource MessageTypeVisibilityConverter}, ConverterParameter=Success}"
                                      Data="M9,20.42L2.79,14.21L5.62,11.38L9,14.77L18.88,4.88L21.71,7.71L9,20.42Z" 
                                      Stretch="Uniform"
                                      Fill="{DynamicResource GreenColor}"/>
                                
                                <!-- Error Icon -->
                                <Path IsVisible="{Binding CurrentMessage.Type, Converter={StaticResource MessageTypeVisibilityConverter}, ConverterParameter=Error}"
                                      Data="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" 
                                      Stretch="Uniform"
                                      Fill="{DynamicResource RedColor}"/>
                                
                                <!-- Warning Icon -->
                                <Path IsVisible="{Binding CurrentMessage.Type, Converter={StaticResource MessageTypeVisibilityConverter}, ConverterParameter=Warning}"
                                      Data="M13,13H11V7H13M13,17H11V15H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" 
                                      Stretch="Uniform"
                                      Fill="{DynamicResource PeachColor}"/>
                                
                                <!-- Info Icon -->
                                <Path IsVisible="{Binding CurrentMessage.Type, Converter={StaticResource MessageTypeVisibilityConverter}, ConverterParameter=Info}"
                                      Data="M13,9H11V7H13M13,17H11V11H13M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z" 
                                      Stretch="Uniform"
                                      Fill="{DynamicResource BlueColor}"/>
                            </Grid>
                        </Viewbox>
                        
                        <!-- Title with color based on message type -->
                        <TextBlock Text="{Binding CurrentMessage.Title}" 
                                   HorizontalAlignment="Center" 
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Foreground="{Binding CurrentMessage.Type, Converter={StaticResource MessageTypeToColorConverter}}"/>
                    </StackPanel>
                    
                    <TextBlock Grid.Row="1" 
                             Text="{Binding CurrentMessage.Message}" 
                             HorizontalAlignment="Center" 
                             VerticalAlignment="Center"
                             TextWrapping="Wrap"
                             FontSize="16"
                             TextAlignment="Center"
                             Margin="10,10"
                             Foreground="{DynamicResource TextBrush}"/>
                    
                    <Button Grid.Row="2" 
                          Content="OK" 
                          HorizontalAlignment="Center" 
                          Command="{Binding CloseMessageDialogCommand}"
                          Margin="0,10,0,0"
                          Background="{DynamicResource BlueColor}"
                          Foreground="{DynamicResource BaseColor}"
                          Padding="30,8"
                          FontSize="16"/>
                </Grid>
            </Border>
        </Border>
    </Grid>
</Window>
